#using STLImportExport.*
#using AttrCondDefLibrary.*

#rule EdgeRule #with STLImportExport

#source { 
	++ Name:myDsl.Facet{
		++ -v1-> vec1
		++ -v2-> vec2
		++ -v3-> vec3
		
	}
	
	++ vec1:myDsl.Vector
	++ vec2:myDsl.Vector
	++ vec3:myDsl.Vector
	
}

#target {
	++ facet:Metamodell.Facet {
		++-edges->e1
		++-edges->e2
		++-edges->e3
	}
	
	++ e1:Metamodell.Edge{
		++-a->a1
		++-b->b1
	}
	

	++ e2:Metamodell.Edge{
		++-a->b1
		++-b->c1
	}
	
	++ e3:Metamodell.Edge{
		++-a->c1
		++-b->a1
	}
	
	
	++a1:Metamodell.Vector3f
	++b1:Metamodell.Vector3f
	++c1:Metamodell.Vector3f
	
}

#correspondence {
	++v1v:VectorToVector{
		#src->vec1
		#trg->a1		
		
	}
	
	++v2v:VectorToVector{
		#src->vec2
		#trg->b1
	}
	
	++v3v:VectorToVector{
		#src->vec3
		#trg->c1
		
	}
}

#attributeConditions {
	
}
